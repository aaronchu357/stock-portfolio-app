{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport BuyStockForm from '../forms/BuyStockForm';\n\nconst Portfolio = props => {\n  // const [userData, setUserData] = useState([])\n  // useEffect(() => {\n  //   debugger\n  //   if (localStorage.token) {\n  //     fetch('/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         debugger\n  //         setUserData(userInfo.data.attributes)\n  //       })\n  //   } else {\n  //     props.history.push('/signin')\n  //   }\n  // }, [userData])  \n  // state = { userData: '' }\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\".concat(ticker, \"&apikey=GJNL5RPAWAUNFOK6\")).then(resp => resp.json()).then(stockData => {\n      let userBalance = props.userData.balance;\n      let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"]);\n      let transactionTotal = price * quantity;\n\n      if (userBalance < transactionTotal) {\n        alert(\"Balance insufficient. Transaction total is \".concat(transactionTotal, \".\"));\n      } else {\n        handleStock(ticker, quantity, price, userBalance, transactionTotal);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  };\n\n  const handleStock = (ticker, quantity, price, balance, total) => {\n    debugger;\n    let stockInfo = {\n      ticker: ticker,\n      price: price\n    };\n    fetch('http://localhost:3000/stocks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    }).then(resp => resp.json()).then(console.log); // .then(stockData => {\n    //   debugger\n    //   // handleTransaction(stockData.data, quantity, balance, total)\n    // })\n    // .catch(error => alert(error))\n  }; // const handleTransaction = (stockData, quantity, balance, total) => {\n  //   fetch('http://localhost:3000/transactions', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       quantity: quantity,\n  //       user_id: props.userData.id,\n  //       stock_id: stockData.id\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(transactionData => {\n  //         debugger\n  //       })\n  //       .catch(error => alert(error))\n  //   })\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Portfolio\"), \"Hi, \", props.userData.name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), \"Balance: \", props.userData.balance, React.createElement(BuyStockForm, Object.assign({}, props, {\n    handleStockFormSubmit: handleStockFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js"],"names":["React","useState","useEffect","BuyStockForm","Portfolio","props","handleStockFormSubmit","ticker","quantity","fetch","then","resp","json","stockData","userBalance","userData","balance","price","parseFloat","transactionTotal","alert","handleStock","catch","error","total","stockInfo","method","headers","localStorage","token","body","JSON","stringify","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,qBAAqB,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAClDC,IAAAA,KAAK,0EAAmEF,MAAnE,8BAAL,CACGG,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,SAAS,IAAI;AACjB,UAAIC,WAAW,GAAGT,KAAK,CAACU,QAAN,CAAeC,OAAjC;AACA,UAAIC,KAAK,GAAGC,UAAU,CAACL,SAAS,CAAC,cAAD,CAAT,CAA0B,WAA1B,CAAD,CAAtB;AACA,UAAIM,gBAAgB,GAAGF,KAAK,GAAGT,QAA/B;;AACA,UAAIM,WAAW,GAAGK,gBAAlB,EAAoC;AAClCC,QAAAA,KAAK,sDAA+CD,gBAA/C,OAAL;AACD,OAFD,MAEO;AACLE,QAAAA,WAAW,CAACd,MAAD,EAASC,QAAT,EAAmBS,KAAnB,EAA0BH,WAA1B,EAAuCK,gBAAvC,CAAX;AACD;AACF,KAXH,EAYGG,KAZH,CAYSC,KAAK,IAAI;AACdH,MAAAA,KAAK,CAACG,KAAD,CAAL;AACD,KAdH;AAeD,GAhBD;;AAkBA,QAAMF,WAAW,GAAG,CAACd,MAAD,EAASC,QAAT,EAAmBS,KAAnB,EAA0BD,OAA1B,EAAmCQ,KAAnC,KAA6C;AAC/D;AACA,QAAIC,SAAS,GAAG;AAAElB,MAAAA,MAAM,EAAEA,MAAV;AAAkBU,MAAAA,KAAK,EAAEA;AAAzB,KAAhB;AACAR,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCiB,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,kBAFH;AAGP,yBAAiBC,YAAY,CAACC;AAHvB,OAF2B;AAOpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;AAP8B,KAAjC,CAAL,CASGf,IATH,CASQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAThB,EAUGF,IAVH,CAUQuB,OAAO,CAACC,GAVhB,EAH+D,CAc7D;AACA;AACA;AACA;AACA;AACH,GAnBD,CAzDyB,CA8EzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,UAEO7B,KAAK,CAACU,QAAN,CAAeoB,IAFtB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKY9B,KAAK,CAACU,QAAN,CAAeC,OAL3B,EAME,oBAAC,YAAD,oBAAkBX,KAAlB;AAAyB,IAAA,qBAAqB,EAAEC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CADF;AAUD,CA5GD;;AA8GA,eAAeF,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BuyStockForm from '../forms/BuyStockForm'\n\nconst Portfolio = props => {\n\n  // const [userData, setUserData] = useState([])\n\n  // useEffect(() => {\n  //   debugger\n  //   if (localStorage.token) {\n  //     fetch('/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         debugger\n  //         setUserData(userInfo.data.attributes)\n  //       })\n  //   } else {\n  //     props.history.push('/signin')\n  //   }\n  // }, [userData])  \n\n  // state = { userData: '' }\n\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=GJNL5RPAWAUNFOK6`)\n      .then(resp => resp.json())\n      .then(stockData => {\n        let userBalance = props.userData.balance\n        let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"])\n        let transactionTotal = price * quantity\n        if (userBalance < transactionTotal) {\n          alert(`Balance insufficient. Transaction total is ${transactionTotal}.`)\n        } else {\n          handleStock(ticker, quantity, price, userBalance, transactionTotal)\n        }\n      })\n      .catch(error => {\n        alert(error)\n      })\n  }\n\n  const handleStock = (ticker, quantity, price, balance, total) => {\n    debugger\n    let stockInfo = { ticker: ticker, price: price}\n    fetch('http://localhost:3000/stocks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    })\n      .then(resp => resp.json())\n      .then(console.log)\n      // .then(stockData => {\n      //   debugger\n      //   // handleTransaction(stockData.data, quantity, balance, total)\n      // })\n      // .catch(error => alert(error))\n  }\n\n  // const handleTransaction = (stockData, quantity, balance, total) => {\n  //   fetch('http://localhost:3000/transactions', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       'Accept': 'application/json'\n  //     },\n  //     body: JSON.stringify({\n  //       quantity: quantity,\n  //       user_id: props.userData.id,\n  //       stock_id: stockData.id\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(transactionData => {\n  //         debugger\n  //       })\n  //       .catch(error => alert(error))\n  //   })\n  // }\n\n  return (\n    <div className=\"portfolio\">\n      <h2 className=\"page-header\">Portfolio</h2>\n      Hi, {props.userData.name}\n      <br />\n\n      Balance: {props.userData.balance}\n      <BuyStockForm {...props} handleStockFormSubmit={handleStockFormSubmit} />\n    </div>\n  )\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}