{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/stock-portfolio-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport BuyStockForm from '../forms/BuyStockForm';\n\nconst Portfolio = props => {\n  // const [userData, setUserData] = useState([])\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        balance = _useState2[0],\n        setBalance = _useState2[1]; // useEffect(() => {\n  //   if (localStorage.token) {\n  //     debugger\n  //     fetch('/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         debugger\n  //         setUserData(props.userInfo.data.attributes)\n  //       })\n  //   } else {\n  //     props.history.push('/signin')\n  //   }\n  // }, [userData])  \n  // state = { userData: '' }\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n\n\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\".concat(ticker, \"&apikey=GJNL5RPAWAUNFOK6\")).then(resp => resp.json()).then(stockData => {\n      let userBalance = props.userData.balance;\n      let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"]);\n      let transactionTotal = price * quantity;\n\n      if (userBalance < transactionTotal) {\n        alert(\"Balance insufficient. Transaction total is \".concat(transactionTotal, \".\"));\n      } else {\n        handleStock(ticker, quantity, price, userBalance, transactionTotal);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const handleStock = (ticker, quantity, price, balance, total) => {\n    let stockInfo = {\n      ticker: ticker,\n      price: price\n    };\n    fetch(\"http://localhost:3000/stocks\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    }).then(resp => resp.json()).then(stockData => {\n      handleTransaction(stockData.data, quantity, balance, total);\n    }).catch(error => console.log(error));\n  };\n\n  const handleTransaction = (stockData, quantity, balance, total) => {\n    debugger;\n    let transactionInfo = {\n      quantity: parseInt(quantity),\n      user_id: props.userData.id,\n      stock_id: parseInt(stockData.id)\n    };\n    fetch('http://localhost:3000/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(transactionInfo)\n    }).then(resp => resp.json()).then(transactionData => {\n      debugger;\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Portfolio\"), \"Hi, \", props.userData === \"\" ? null : props.userData.attributes.name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), \"Balance: \", props.userData === \"\" ? null : props.userData.attributes.balance, React.createElement(BuyStockForm, Object.assign({}, props, {\n    handleStockFormSubmit: handleStockFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js"],"names":["React","useState","useEffect","BuyStockForm","Portfolio","props","balance","setBalance","handleStockFormSubmit","ticker","quantity","fetch","then","resp","json","stockData","userBalance","userData","price","parseFloat","transactionTotal","alert","handleStock","catch","error","console","log","total","stockInfo","method","headers","Authorization","localStorage","token","body","JSON","stringify","handleTransaction","data","transactionInfo","parseInt","user_id","id","stock_id","transactionData","attributes","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BuyStockForm from '../forms/BuyStockForm'\n\nconst Portfolio = props => {\n\n  // const [userData, setUserData] = useState([])\n  const [balance, setBalance] = useState(0)\n  // useEffect(() => {\n  //   if (localStorage.token) {\n  //     debugger\n  //     fetch('/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         debugger\n  //         setUserData(props.userInfo.data.attributes)\n  //       })\n  //   } else {\n  //     props.history.push('/signin')\n  //   }\n  // }, [userData])  \n\n  // state = { userData: '' }\n\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=GJNL5RPAWAUNFOK6`)\n      .then(resp => resp.json())\n      .then(stockData => {\n        let userBalance = props.userData.balance\n        let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"])\n        let transactionTotal = price * quantity\n        if (userBalance < transactionTotal) {\n          alert(`Balance insufficient. Transaction total is ${transactionTotal}.`)\n        } else {\n          handleStock(ticker, quantity, price, userBalance, transactionTotal)\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  const handleStock = (ticker, quantity, price, balance, total) => {\n    let stockInfo = { ticker: ticker, price: price }\n    fetch(`http://localhost:3000/stocks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    })\n      .then(resp => resp.json())\n      .then(stockData => {\n        handleTransaction(stockData.data, quantity, balance, total)\n      })\n      .catch(error => console.log(error))\n  }\n\n  const handleTransaction = (stockData, quantity, balance, total) => {\n    debugger\n    let transactionInfo = {\n      quantity: parseInt(quantity),\n      user_id: props.userData.id,\n      stock_id: parseInt(stockData.id)\n    }\n    fetch('http://localhost:3000/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(transactionInfo)\n    })\n      .then(resp => resp.json())\n      .then(transactionData => {\n        debugger\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <div className=\"portfolio\">\n      <h2 className=\"page-header\">Portfolio</h2>\n      Hi, {props.userData === \"\" ? null : props.userData.attributes.name}\n      <br />\n\n      Balance: {props.userData === \"\" ? null : props.userData.attributes.balance}\n      <BuyStockForm {...props} handleStockFormSubmit={handleStockFormSubmit} />\n    </div>\n  )\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}