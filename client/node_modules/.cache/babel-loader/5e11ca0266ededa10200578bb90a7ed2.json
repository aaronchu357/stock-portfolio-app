{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/stock-portfolio-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/stock-portfolio-app/frontend/src/components/Stock.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Stock = props => {\n  // state = {\n  //   price: '',\n  // }\n  // componentDidMount() {\n  //   fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(this.props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n  //     .then(resp => resp.json())\n  //     .then(stockData => {\n  //       this.setState({ price: parseFloat(stockData[\"Global Quote\"][\"05. price\"]) })\n  //     })\n  //     .catch(error => alert(error))\n  // }\n  const _useState = useState({\n    price: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stockState = _useState2[0],\n        setStockState = _useState2[1];\n\n  useEffect(() => {\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\".concat(Object.keys(props.stockData)[0], \"&apikey=GJNL5RPAWAUNFOK6\")).then(resp => resp.json()).then(stockData => {\n      setStockState({\n        price: parseFloat(stockData[\"Global Quote\"][\"05. price\"])\n      });\n    }).catch(error => alert(error));\n  }); // render() {\n\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, Object.keys(props.stockData)[0], \" - \", Object.values(props.stockData)[0], \" Shares Value: $\", Math.round(stockState.price * Object.values(props.stockData)[0] * 10000) / 10000); // }\n};\n\nexport default Stock;","map":{"version":3,"sources":["/Users/aaronchu/Development/stock-portfolio-app/frontend/src/components/Stock.js"],"names":["React","useState","useEffect","Stock","props","price","stockState","setStockState","fetch","Object","keys","stockData","then","resp","json","parseFloat","catch","error","alert","values","Math","round"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAErB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdqB,oBAgBeH,QAAQ,CAAC;AAC3CI,IAAAA,KAAK,EAAE;AADoC,GAAD,CAhBvB;AAAA;AAAA,QAgBdC,UAhBc;AAAA,QAgBFC,aAhBE;;AAqBrBL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,0EAAmEC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,SAAlB,EAA6B,CAA7B,CAAnE,8BAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQD,SAAS,IAAI;AACjBJ,MAAAA,aAAa,CAAC;AAAEF,QAAAA,KAAK,EAAEU,UAAU,CAACJ,SAAS,CAAC,cAAD,CAAT,CAA0B,WAA1B,CAAD;AAAnB,OAAD,CAAb;AACD,KAJH,EAKGK,KALH,CAKSC,KAAK,IAAIC,KAAK,CAACD,KAAD,CALvB;AAMD,GAPQ,CAAT,CArBqB,CA8BrB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,SAAlB,EAA6B,CAA7B,CADH,SACuCF,MAAM,CAACU,MAAP,CAAcf,KAAK,CAACO,SAApB,EAA+B,CAA/B,CADvC,sBAC0FS,IAAI,CAACC,KAAL,CAAWf,UAAU,CAACD,KAAX,GAAmBI,MAAM,CAACU,MAAP,CAAcf,KAAK,CAACO,SAApB,EAA+B,CAA/B,CAAnB,GAAuD,KAAlE,IAA2E,KADrK,CADF,CA/BqB,CAoCrB;AACD,CArCD;;AAuCA,eAAeR,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Stock = props => {\n\n  // state = {\n  //   price: '',\n\n  // }\n\n  // componentDidMount() {\n  //   fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(this.props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n  //     .then(resp => resp.json())\n  //     .then(stockData => {\n  //       this.setState({ price: parseFloat(stockData[\"Global Quote\"][\"05. price\"]) })\n  //     })\n  //     .catch(error => alert(error))\n  // }\n\n  const [stockState, setStockState] = useState({\n    price: '',\n\n  })\n\n  useEffect(() => {\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n      .then(resp => resp.json())\n      .then(stockData => {\n        setStockState({ price: parseFloat(stockData[\"Global Quote\"][\"05. price\"]) })\n      })\n      .catch(error => alert(error))\n  })\n\n  // render() {\n  return (\n    <li>\n      {Object.keys(props.stockData)[0]} - {Object.values(props.stockData)[0]} Shares Value: ${Math.round(stockState.price * Object.values(props.stockData)[0] * 10000) / 10000}\n    </li>\n  )\n  // }\n}\n\nexport default Stock"]},"metadata":{},"sourceType":"module"}