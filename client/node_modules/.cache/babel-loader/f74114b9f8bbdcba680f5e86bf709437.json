{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/stock-portfolio-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/stock-portfolio-app/frontend/src/components/Stock.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Stock = props => {\n  // state = {\n  //   price: '',\n  // }\n  // componentDidMount() {\n  //   fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(this.props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n  //     .then(resp => resp.json())\n  //     .then(stockData => {\n  //       this.setState({ price: parseFloat(stockData[\"Global Quote\"][\"05. price\"]) })\n  //     })\n  //     .catch(error => alert(error))\n  // }\n  const _useState = useState({\n    price: '',\n    dayOpenPrice: '',\n    color: 'grey'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stockState = _useState2[0],\n        setStockState = _useState2[1];\n\n  useEffect(() => {\n    // Limited to 5 calls per minute, unable to show more than 5 stocks at once\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\".concat(Object.keys(props.stockData)[0], \"&apikey=GJNL5RPAWAUNFOK6\")).then(resp => resp.json()).then(stockData => {\n      let currentPrice = parseFloat(stockData[\"Global Quote\"][\"05. price\"]);\n      let openPrice = parseFloat(stockData[\"Global Quote\"][\"02. open\"]);\n      let tickerColor = 'grey';\n\n      if (currentPrice > openPrice) {\n        tickerColor = 'green';\n      } else {\n        tickerColor = 'red';\n      }\n\n      setStockState({\n        price: currentPrice,\n        dayOpenPrice: openPrice,\n        color: tickerColor\n      });\n    }).catch(error => alert(error));\n  }, [props.stockData]); // render() {\n\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    className: \"stock-ticker\",\n    style: \"color:\".concat(stockState.color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, Object.keys(props.stockData)[0]), \" - \", Object.values(props.stockData)[0], \" Shares Value: $\", Math.round(stockState.price * Object.values(props.stockData)[0] * 10000) / 10000); // }\n};\n\nexport default Stock;","map":{"version":3,"sources":["/Users/aaronchu/Development/stock-portfolio-app/frontend/src/components/Stock.js"],"names":["React","useState","useEffect","Stock","props","price","dayOpenPrice","color","stockState","setStockState","fetch","Object","keys","stockData","then","resp","json","currentPrice","parseFloat","openPrice","tickerColor","catch","error","alert","values","Math","round"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAErB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdqB,oBAgBeH,QAAQ,CAAC;AAC3CI,IAAAA,KAAK,EAAE,EADoC;AAE3CC,IAAAA,YAAY,EAAE,EAF6B;AAG3CC,IAAAA,KAAK,EAAE;AAHoC,GAAD,CAhBvB;AAAA;AAAA,QAgBdC,UAhBc;AAAA,QAgBFC,aAhBE;;AAsBrBP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,KAAK,0EAAmEC,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,SAAlB,EAA6B,CAA7B,CAAnE,8BAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQD,SAAS,IAAI;AACjB,UAAII,YAAY,GAAGC,UAAU,CAACL,SAAS,CAAC,cAAD,CAAT,CAA0B,WAA1B,CAAD,CAA7B;AACA,UAAIM,SAAS,GAAGD,UAAU,CAACL,SAAS,CAAC,cAAD,CAAT,CAA0B,UAA1B,CAAD,CAA1B;AACA,UAAIO,WAAW,GAAG,MAAlB;;AACA,UAAGH,YAAY,GAAGE,SAAlB,EAA4B;AAC1BC,QAAAA,WAAW,GAAG,OAAd;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,GAAG,KAAd;AACD;;AACDX,MAAAA,aAAa,CAAC;AACZJ,QAAAA,KAAK,EAAEY,YADK;AAEZX,QAAAA,YAAY,EAAEa,SAFF;AAGZZ,QAAAA,KAAK,EAAEa;AAHK,OAAD,CAAb;AAKD,KAhBH,EAiBGC,KAjBH,CAiBSC,KAAK,IAAIC,KAAK,CAACD,KAAD,CAjBvB;AAkBD,GApBQ,EAoBN,CAAClB,KAAK,CAACS,SAAP,CApBM,CAAT,CAtBqB,CA4CrB;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAA6B,IAAA,KAAK,kBAAWL,UAAU,CAACD,KAAtB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkEI,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,SAAlB,EAA6B,CAA7B,CAAlE,CADF,SAC6GF,MAAM,CAACa,MAAP,CAAcpB,KAAK,CAACS,SAApB,EAA+B,CAA/B,CAD7G,sBACgKY,IAAI,CAACC,KAAL,CAAWlB,UAAU,CAACH,KAAX,GAAmBM,MAAM,CAACa,MAAP,CAAcpB,KAAK,CAACS,SAApB,EAA+B,CAA/B,CAAnB,GAAuD,KAAlE,IAA2E,KAD3O,CADF,CA7CqB,CAkDrB;AACD,CAnDD;;AAqDA,eAAeV,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Stock = props => {\n\n  // state = {\n  //   price: '',\n\n  // }\n\n  // componentDidMount() {\n  //   fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(this.props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n  //     .then(resp => resp.json())\n  //     .then(stockData => {\n  //       this.setState({ price: parseFloat(stockData[\"Global Quote\"][\"05. price\"]) })\n  //     })\n  //     .catch(error => alert(error))\n  // }\n\n  const [stockState, setStockState] = useState({\n    price: '',\n    dayOpenPrice: '',\n    color: 'grey'\n  })\n\n  useEffect(() => {\n    // Limited to 5 calls per minute, unable to show more than 5 stocks at once\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${Object.keys(props.stockData)[0]}&apikey=GJNL5RPAWAUNFOK6`)\n      .then(resp => resp.json())\n      .then(stockData => {\n        let currentPrice = parseFloat(stockData[\"Global Quote\"][\"05. price\"])\n        let openPrice = parseFloat(stockData[\"Global Quote\"][\"02. open\"])\n        let tickerColor = 'grey'\n        if(currentPrice > openPrice){\n          tickerColor = 'green'\n        } else {\n          tickerColor = 'red'\n        }\n        setStockState({ \n          price: currentPrice,\n          dayOpenPrice: openPrice,\n          color: tickerColor\n        })\n      })\n      .catch(error => alert(error))\n  }, [props.stockData])\n\n  // render() {\n  return (\n    <li>\n      <em className=\"stock-ticker\" style={`color:${stockState.color}`}>{Object.keys(props.stockData)[0]}</em> - {Object.values(props.stockData)[0]} Shares Value: ${Math.round(stockState.price * Object.values(props.stockData)[0] * 10000) / 10000}\n    </li>\n  )\n  // }\n}\n\nexport default Stock"]},"metadata":{},"sourceType":"module"}