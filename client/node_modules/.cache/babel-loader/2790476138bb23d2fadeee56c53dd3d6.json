{"ast":null,"code":"import _slicedToArray from \"/Users/aaronchu/Development/stock-portfolio-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport BuyStockForm from '../forms/BuyStockForm';\n\nconst Portfolio = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        userData = _useState2[0],\n        setUserData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        balance = _useState4[0],\n        setBalance = _useState4[1];\n\n  useEffect(() => {\n    if (localStorage.token) {\n      debugger;\n      fetch('/profile', {\n        headers: {\n          Authorization: localStorage.token\n        }\n      }).then(resp => resp.json()).then(userInfo => {\n        debugger;\n        setUserData(props.userData.attributes);\n        setBalance(props.userInfo.attributes.balance);\n      });\n    } else {\n      props.history.push('/signin');\n    }\n  }); // state = { userData: '' }\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\".concat(ticker, \"&apikey=GJNL5RPAWAUNFOK6\")).then(resp => resp.json()).then(stockData => {\n      let userBalance = props.userData.attributes.balance;\n      let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"]);\n      let transactionTotal = price * quantity;\n\n      if (userBalance < transactionTotal) {\n        alert(\"Balance insufficient. Transaction total is \".concat(transactionTotal, \".\"));\n      } else {\n        handleStock(ticker, quantity, price, transactionTotal);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const handleStock = (ticker, quantity, price, total) => {\n    let stockInfo = {\n      ticker: ticker,\n      price: price\n    };\n    fetch(\"http://localhost:3000/stocks\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    }).then(resp => resp.json()).then(stockData => {\n      handleTransaction(stockData.data, quantity, total);\n    }).catch(error => console.log(error));\n  };\n\n  const handleTransaction = (stockData, quantity, total) => {\n    let transactionInfo = {\n      quantity: parseInt(quantity),\n      user_id: props.userData.id,\n      stock_id: parseInt(stockData.id)\n    };\n    fetch('http://localhost:3000/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(transactionInfo)\n    }).then(resp => resp.json()).then(transactionData => {\n      console.log(total);\n      let a = props;\n      debugger;\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"portfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Portfolio\"), \"Hi, \", props.userData === \"\" ? null : props.userData.attributes.name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), \"Balance: \", props.userData === \"\" ? null : props.userData.attributes.balance, React.createElement(BuyStockForm, Object.assign({}, props, {\n    handleStockFormSubmit: handleStockFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/aaronchu/Development/stock-portfolio-app/frontend/src/containers/Portfolio.js"],"names":["React","useState","useEffect","BuyStockForm","Portfolio","props","userData","setUserData","balance","setBalance","localStorage","token","fetch","headers","Authorization","then","resp","json","userInfo","attributes","history","push","handleStockFormSubmit","ticker","quantity","stockData","userBalance","price","parseFloat","transactionTotal","alert","handleStock","catch","error","console","log","total","stockInfo","method","body","JSON","stringify","handleTransaction","data","transactionInfo","parseInt","user_id","id","stock_id","transactionData","a","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BuyStockForm from '../forms/BuyStockForm'\n\nconst Portfolio = props => {\n\n  const [userData, setUserData] = useState([])\n  const [balance, setBalance] = useState(0)\n  \n  useEffect(() => {\n    if (localStorage.token) {\n      debugger\n      fetch('/profile', {\n        headers: {\n          Authorization: localStorage.token\n        }\n      })\n        .then(resp => resp.json())\n        .then(userInfo => {\n          debugger\n          setUserData(props.userData.attributes)\n          setBalance(props.userInfo.attributes.balance)\n        })\n    } else {\n      props.history.push('/signin')\n    }\n  })  \n\n  // state = { userData: '' }\n\n  // componentDidMount() {\n  //   if (localStorage.token) {\n  //     fetch('http://localhost:3000/profile', {\n  //       headers: {\n  //         Authorization: localStorage.token\n  //       }\n  //     })\n  //       .then(resp => resp.json())\n  //       .then(userInfo => {\n  //         this.setState({ userData: userInfo.data.attributes })\n  //       })\n  //   }\n  // }\n  // render(){\n\n  const handleStockFormSubmit = (ticker, quantity) => {\n    fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker}&apikey=GJNL5RPAWAUNFOK6`)\n      .then(resp => resp.json())\n      .then(stockData => {\n        let userBalance = props.userData.attributes.balance\n        let price = parseFloat(stockData[\"Global Quote\"][\"05. price\"])\n        let transactionTotal = price * quantity\n        if (userBalance < transactionTotal) {\n          alert(`Balance insufficient. Transaction total is ${transactionTotal}.`)\n        } else {\n          handleStock(ticker, quantity, price, transactionTotal)\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  const handleStock = (ticker, quantity, price, total) => {\n    let stockInfo = { ticker: ticker, price: price }\n    fetch(`http://localhost:3000/stocks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(stockInfo)\n    })\n      .then(resp => resp.json())\n      .then(stockData => {\n        handleTransaction(stockData.data, quantity, total)\n      })\n      .catch(error => console.log(error))\n  }\n\n  const handleTransaction = (stockData, quantity, total) => {\n    let transactionInfo = {\n      quantity: parseInt(quantity),\n      user_id: props.userData.id,\n      stock_id: parseInt(stockData.id)\n    }\n    fetch('http://localhost:3000/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        Authorization: localStorage.token\n      },\n      body: JSON.stringify(transactionInfo)\n    })\n      .then(resp => resp.json())\n      .then(transactionData => {\n        console.log(total)\n        let a = props\n        debugger\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <div className=\"portfolio\">\n      <h2 className=\"page-header\">Portfolio</h2>\n      Hi, {props.userData === \"\" ? null : props.userData.attributes.name}\n      <br />\n\n      Balance: {props.userData === \"\" ? null : props.userData.attributes.balance}\n      <BuyStockForm {...props} handleStockFormSubmit={handleStockFormSubmit} />\n    </div>\n  )\n}\n\nexport default Portfolio"]},"metadata":{},"sourceType":"module"}